[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[project]
name = "geodata"
version = "0.1.0"
description = "A comprehensive geospatial data enrichment toolkit"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
keywords = [
    "geospatial",
    "data enrichment",
    "geocoding",
    "address standardization",
    "h3",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "dask>=2023.3.0",
    "pandas>=2.0.0",
    "h3>=3.7.6",
    "shapely>=2.0.0",
    "pycountry>=22.3.5",
    "requests>=2.28.0",
    "pyyaml>=6.0.1",
    "rich>=13.0.0",
    "timezonefinder>=6.2.0",
    "arabic-reshaper>=3.0.0",
    "python-bidi>=0.4.2",
    "thefuzz>=0.19.0",
    "unidecode>=1.3.6",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.urls]
Documentation = "https://github.com/yourusername/geodata#readme"
Source = "https://github.com/yourusername/geodata"
Issues = "https://github.com/yourusername/geodata/issues"

[project.scripts]
geodata = "geodata.cli.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/geodata"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "dask.*",
    "h3.*",
    "shapely.*",
    "pycountry.*",
    "arabic_reshaper.*",
    "bidi.*",
    "thefuzz.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=geodata --cov-report=term-missing"
testpaths = [
    "tests",
]
python_classes = ["Test", "Describe"]
python_functions = ["test_", "it_", "they_"]
python_files = ["test_*.py"]

[tool.coverage.run]
source = ["src/geodata"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]
